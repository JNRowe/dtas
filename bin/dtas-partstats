#!/usr/bin/env ruby
# Copyright (C) all contributors <dtas-all@nongnu.org>
# License: GPL-3.0+ <https://www.gnu.org/licenses/gpl-3.0.txt>
# frozen_string_literal: true
# TODO
# - option parsing: sox effects, stats effect options
# - support piping out to external processes
# - configurable output formatting
# - Sequel/SQLite support
require 'dtas/partstats'
require 'etc'
infile = ARGV[0] or abort "usage: #$0 INFILE"
ps = DTAS::PartStats.new(infile)

opts = { jobs: Etc.nprocessors }
stats = ps.run(opts)

headers = ps.key_idx.to_a
headers = headers.sort_by! { |(n,i)| i }.map! { |(n,_)| n }
width = ps.key_width
print "    time "
puts(headers.map do |h|
  cols = width[h]
  sprintf("% #{(cols * 6)+cols-1}s", h.tr(' ','_'))
end.join(" | "))

stats.each do |row|
  trim_part = row.shift
  print "#{trim_part.hhmmss} "
  puts(row.map do |group|
    group.map do |f|
      case f
      when Float
        sprintf("% 6.2f", f)
      else
        sprintf("% 6s", f)
      end
    end.join(" ")
  end.join(" | "))
end
